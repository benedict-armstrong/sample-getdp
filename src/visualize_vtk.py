"""
Visualization utilities for VTK files generated by GetDP simulations.
"""

import pyvista as pv
import numpy as np
from pathlib import Path
from .run_experiments import load_vtk_results


def visualize_experiment(experiment_dir: str, out_dir: str = "out"):
    """
    Visualize VTK results for a specific experiment using PyVista.

    Args:
        experiment_dir: Name of the experiment directory
        out_dir: Directory containing experiment outputs
    """
    # Load VTK results
    vtk_results = load_vtk_results(experiment_dir)

    if not vtk_results:
        print(f"No VTK files found for experiment {experiment_dir}")
        return

    # Create a plotter
    plotter = pv.Plotter()

    # Add each VTK file to the plot
    for filename, mesh in vtk_results.items():
        print(f"Adding {filename} to visualization")

        # Determine what to plot based on the filename
        if "v" in filename.lower():  # Potential files
            plotter.add_mesh(
                mesh,
                scalars=mesh.active_scalars_name,
                show_edges=True,
                cmap="viridis",
                label=f"Potential ({filename})",
            )
        elif "e" in filename.lower():  # Electric field files
            plotter.add_mesh(
                mesh,
                scalars=mesh.active_scalars_name,
                show_edges=True,
                cmap="plasma",
                label=f"Electric Field ({filename})",
            )
        else:
            # Default visualization
            plotter.add_mesh(mesh, show_edges=True, label=f"Data ({filename})")

    # Add legend
    plotter.add_legend()

    # Set up the view
    plotter.view_isometric()
    plotter.show_grid()

    # Show the plot
    plotter.show()


def compare_experiments(
    experiment_dirs: list, out_dir: str = "out", field_name: str = "v"
):
    """
    Compare the same field across multiple experiments.

    Args:
        experiment_dirs: List of experiment directory names
        out_dir: Directory containing experiment outputs
        field_name: Field to compare (e.g., 'v' for potential, 'e' for electric field)
    """
    plotter = pv.Plotter(shape=(1, len(experiment_dirs)))

    for i, exp_dir in enumerate(experiment_dirs):
        vtk_results = load_vtk_results(exp_dir, out_dir)

        # Find the relevant VTK file
        target_file = None
        for filename in vtk_results.keys():
            if field_name in filename.lower():
                target_file = filename
                break

        if target_file is None:
            print(f"No {field_name} field found in {exp_dir}")
            continue

        mesh = vtk_results[target_file]

        # Add to subplot
        plotter.subplot(0, i)
        plotter.add_mesh(
            mesh, scalars=mesh.active_scalars_name, show_edges=True, cmap="viridis"
        )
        plotter.add_title(f"{exp_dir} - {field_name}")
        plotter.view_isometric()

    plotter.show()


def create_animation(
    experiment_dir: str, out_dir: str = "out", output_file: str = "animation.mp4"
):
    """
    Create an animation of the VTK results.

    Args:
        experiment_dir: Name of the experiment directory
        out_dir: Directory containing experiment outputs
        output_file: Output file name for the animation
    """
    vtk_results = load_vtk_results(experiment_dir, out_dir)

    if not vtk_results:
        print(f"No VTK files found for experiment {experiment_dir}")
        return

    # Get the first mesh to create animation
    first_mesh = list(vtk_results.values())[0]

    # Create a plotter for animation
    plotter = pv.Plotter()
    plotter.add_mesh(
        first_mesh,
        scalars=first_mesh.active_scalars_name,
        show_edges=True,
        cmap="viridis",
    )

    # Set up the view
    plotter.view_isometric()
    plotter.show_grid()

    # Create animation by rotating the view
    plotter.open_movie(output_file)

    # Rotate around the mesh
    for i in range(360):
        plotter.camera_position = [
            (10 * np.cos(np.radians(i)), 10 * np.sin(np.radians(i)), 5),
            (0, 0, 0),
            (0, 0, 1),
        ]
        plotter.write_frame()

    plotter.close()


def quick_view_vtk(vtk_file_path: str):
    """
    Quick visualization of a single VTK file.

    Args:
        vtk_file_path: Path to the VTK file
    """
    try:
        mesh = pv.read(vtk_file_path)
        mesh.plot(show_edges=True, cmap="viridis")
    except Exception as e:
        print(f"Error loading VTK file {vtk_file_path}: {e}")


if __name__ == "__main__":
    # Example usage
    import sys

    if len(sys.argv) > 1:
        experiment_dir = sys.argv[1]
        visualize_experiment(experiment_dir)
    else:
        print("Usage: python visualize_vtk.py <experiment_directory>")
        print("Example: python visualize_vtk.py experiment_001")
